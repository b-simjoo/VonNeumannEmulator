{"mappings":"AAEA,MAAMA,IAAOC,IACX,IAAK,MAAMC,KAAQD,EAAGE,SAAU,CAC9B,MAAMC,EAAIF,EAAoBG,UAC3BC,QAAQ,YAAa,mCACrBA,QACC,+CACA,+DAEDA,QAAQ,gBAAiB,gCACzBA,QAAQ,UAAW,kCACtBJ,EAAKK,UAAYH,EAAEI,MAAM,MAAMC,KAAK,QACtC,GAGIC,OAAS,CAACT,EAAiBU,EAAYX,IAAKY,EAAM,UACtD,MAAMC,EAAQ,KACZ,MAAMC,EAAQC,OAAOC,eAAgBC,WAAW,GAC1CC,EAASJ,EAAMK,aAGrB,OAFAD,EAAOE,mBAAmBnB,GAC1BiB,EAAOG,OAAOP,EAAMQ,aAAcR,EAAMS,WACjCL,EAAOM,WAAWC,MAAM,EAG3BC,EAAW,CAACC,EAAaC,EAAS3B,KACtC,IAAK,MAAMC,KAAQ0B,EAAOC,WACxB,GAAI3B,EAAK4B,UAAYC,KAAKC,UAAS,CACjC,GAAI9B,EAAauB,QAAUE,EAAK,CAC9B,MAAMb,EAAQmB,SAASC,cACjBC,EAAMpB,OAAOC,eAKnB,OAJAF,EAAMsB,SAASlC,EAAMyB,GACrBb,EAAMuB,UAAS,GACfF,GAAKG,kBACLH,GAAKI,SAASzB,IACP,CACT,CACEa,GAAYzB,EAAauB,M,MAI3B,IADAE,EAAMD,EAASC,EAAkBzB,IACvB,EACR,OAAOyB,EAIb,OAAOA,CAAA,EAGThB,EAAUV,GAEVA,EAAGuC,iBAAiB,WAAYC,IAC9B,GAAe,QAAXA,EAAEC,KAAgB,CACpB,MAAMf,EAAMd,IAAUD,EAAIa,OACpBX,EAAQC,OAAOC,gBAAgBC,WAAW,GAChDH,GAAO6B,iBACP7B,GAAO8B,WAAWX,SAASY,eAAejC,IAC1CD,EAAUV,GACVyB,EAASC,GACTc,EAAEK,gBACJ,KAGF7C,EAAGuC,iBAAiB,SAAUC,IAC5B,GAAIA,EAAEM,SAAW,IAAqB,IAAbN,EAAEM,QAAiB,CAC1C,MAAMpB,EAAMd,IACZF,EAAUV,GACVyB,EAASC,EACX,IACF","sources":["Programing/Projects/VonNeumannEmulator/src/codeEditor.ts"],"sourcesContent":["// Syntax highlight for JS\n\nconst asm = (el: HTMLElement) => {\n  for (const node of el.children) {\n    const s = (<HTMLElement>node).innerText\n      .replace(/(\\/\\/.*)/g, \"<span class='comment'>$1</span>\")\n      .replace(\n        /\\b(load|store|add|and|jump|jumpz)(\\s+)(\\d+)/g,\n        \"<span class='func'>$1</span>$2<span class='param'>$3</span>\"\n      )\n      .replace(/\\b(comp|lsl)/g, \"<span class='func'>$1</span>\")\n      .replace(/^(\\d+)/g, \"<span class='number'>$1</span>\");\n    node.innerHTML = s.split(\"\\n\").join(\"<br/>\");\n  }\n};\n\nconst Editor = (el: HTMLElement, highlight = asm, tab = \"    \") => {\n  const caret = () => {\n    const range = window.getSelection()!.getRangeAt(0);\n    const prefix = range.cloneRange();\n    prefix.selectNodeContents(el);\n    prefix.setEnd(range.endContainer, range.endOffset);\n    return prefix.toString().length;\n  };\n\n  const setCaret = (pos: number, parent = el) => {\n    for (const node of parent.childNodes) {\n      if (node.nodeType == Node.TEXT_NODE) {\n        if ((<Text>node).length >= pos) {\n          const range = document.createRange();\n          const sel = window.getSelection();\n          range.setStart(node, pos);\n          range.collapse(true);\n          sel?.removeAllRanges();\n          sel?.addRange(range);\n          return -1;\n        } else {\n          pos = pos - (<Text>node).length;\n        }\n      } else {\n        pos = setCaret(pos, <HTMLElement>node);\n        if (pos < 0) {\n          return pos;\n        }\n      }\n    }\n    return pos;\n  };\n\n  highlight(el);\n\n  el.addEventListener(\"keydown\", (e) => {\n    if (e.code === \"Tab\") {\n      const pos = caret() + tab.length;\n      const range = window.getSelection()?.getRangeAt(0);\n      range?.deleteContents();\n      range?.insertNode(document.createTextNode(tab));\n      highlight(el);\n      setCaret(pos);\n      e.preventDefault();\n    }\n  });\n\n  el.addEventListener(\"keyup\", (e) => {\n    if (e.keyCode >= 0x30 || e.keyCode == 0x20) {\n      const pos = caret();\n      highlight(el);\n      setCaret(pos);\n    }\n  });\n};\n"],"names":["asm","el","node","children","s","innerText","replace","innerHTML","split","join","Editor","highlight","tab","caret","range","window","getSelection","getRangeAt","prefix","cloneRange","selectNodeContents","setEnd","endContainer","endOffset","toString","length","setCaret","pos","parent","childNodes","nodeType","Node","TEXT_NODE","document","createRange","sel","setStart","collapse","removeAllRanges","addRange","addEventListener","e","code","deleteContents","insertNode","createTextNode","preventDefault","keyCode"],"version":3,"file":"index.f5aa8957.js.map"}